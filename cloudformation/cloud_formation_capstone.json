{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "GL Capstone project group 2 - EC2 instances",
  "Parameters": {
    "InstanceType": {
      "Description": "WebServer EC2 instance type",
      "Type": "String",
      "Default": "t2.small"
    },
    "InstanceAMI": {
      "Description": "EC2 instance AMI",
      "Type": "String",
      "Default": "ami-0c02fb55956c7d316"
    },

    "KeyPairName1": {
      "Description": "EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default": "ec2_group2_node1"
    }
  },
  "Resources": {
    "InternetGateway" : {
      "Type" : "AWS::EC2::InternetGateway",
      "Properties" : {
        "Tags" : [ {"Key" : "stack", "Value" : "internet_gateway"}]
      }
    },
    "VpcPrivate" : {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "190.0.0.0/24",
        "Tags": [
          {
            "Key": "stack",
            "Value": "private"
          }
        ]
      }
    },
    "subnetPrivate" : {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "VpcId" : { "Ref" : "VpcPrivate" },
          "CidrBlock" : "190.0.0.0/24",
          "Tags" : [ { "Key" : "stack", "Value" : "production" } ]
       }
    },
    "VpcPublic" : {
       "Type" : "AWS::EC2::VPC",
       "Properties" : {
          "CidrBlock" : "191.0.0.0/24",
          "Tags" : [
             {"Key" : "stack", "Value" : "public"}
          ]
       }
    },
    "subnetPublic" : {
       "Type" : "AWS::EC2::Subnet",
       "Properties" : {
          "VpcId" : { "Ref" : "VpcPublic" },
          "CidrBlock" : "191.0.0.0/24",
          "Tags" : [ { "Key" : "stack", "Value" : "production" } ]
       }
    },
    "RouteTable" : {
       "Type" : "AWS::EC2::RouteTable",
       "Properties" : {
          "VpcId" : { "Ref" : "VpcPublic" },
          "Tags" : [ {"Key" : "stack", "Value" : "internet_gateway"} ]
       }
    },
    "AttachGateway" : {
       "Type" : "AWS::EC2::VPCGatewayAttachment",
       "Properties" : {
          "VpcId" : { "Ref" : "VpcPublic" },
          "InternetGatewayId" : { "Ref" : "InternetGateway" }
        }
    },
    "WebServerSecurityGroupPublic": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP ingress",
        "VpcId": {
          "Ref": "VpcPublic"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "30000",
            "ToPort": "30999",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8546",
            "ToPort": "8546",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": "8545",
            "ToPort": "8545",
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "udp",
            "FromPort": "30000",
            "ToPort": "30999",
            "CidrIp": "0.0.0.0/0"
          }
        ],
        "Tags" : [ {"Key" : "stack", "Value" : "internet_gateway"} ]
      }
    },
    "WebServerSecurityGroupPrivate": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable HTTP ingress",
        "VpcId": {
          "Ref": "VpcPrivate"
        },
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": "22",
            "ToPort": "22",
            "CidrIp": "191.0.0.0/24"
          }
        ]
      }
    },
    "EC2InstanceNodePublic1": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": "ec2_group2_node1",
        "ImageId": {
          "Ref": "InstanceAMI"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroupPublic"
              }
            ],
            "SubnetId": {"Ref": "subnetPublic"},
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "UserData": {
            "Fn::Base64": {
                "Fn::Sub": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install git\nMINER_NAME=\"EagleAccount1\"\ncd /home/ec2-user\ngit clone https://github.com/swamigmv/group2.git\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nchown ec2-user /home/ec2-user/group2/geth/\nchmod -R 755 /home/ec2-user/group2/geth/\nmkdir -p /home/ec2-user/Swami\nmkdir -p /home/ec2-user/Vishal\nmkdir -p /home/ec2-user/EagleAccount1\n\ncat << 'EOF' > /home/ec2-user/Swami/pwd.txt\nnode\nEOF\ncat << 'EOF' > /home/ec2-user/Vishal/pwd.txt\nnode\nEOF\ncat << 'EOF' > /home/ec2-user/EagleAccount1/pwd.txt\nacct1\nEOF\ncat << 'EOF' > /home/ec2-user/.bashrc\n\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nEOF\ncd /home/ec2-user/Swami\ngeth --datadir ./data account new  --password /home/ec2-user/Swami/pwd.txt\ncd /home/ec2-user/Vishal\ngeth --datadir ./data account new --password /home/ec2-user/Vishal/pwd.txt\ncd /home/ec2-user/EagleAccount1\ngeth --datadir ./data account new --password /home/ec2-user/EagleAccount1/pwd.txt\n\nsudo chown -R ec2-user /home/ec2-user/Swami\nsudo chown -R ec2-user /home/ec2-user/Vishal\nsudo chown -R ec2-user /home/ec2-user/EagleAccount1"

            }
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "bnode_creation"
          }
        ]
      }
    },
    "EC2InstanceNodePublic2": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": "ec2_group2_node1",
        "ImageId": {
          "Ref": "InstanceAMI"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroupPublic"
              }
            ],
            "SubnetId": {"Ref": "subnetPublic"},
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "UserData": {
            "Fn::Base64": {
                "Fn::Sub": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install git\nMINER_NAME=\"EagleAccount1\"\ncd /home/ec2-user\ngit clone https://github.com/swamigmv/group2.git\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nchown ec2-user /home/ec2-user/group2/geth/\nchmod -R 755 /home/ec2-user/group2/geth/\nmkdir -p /home/ec2-user/Pinakin\nmkdir -p /home/ec2-user/Madhavi\nmkdir -p /home/ec2-user/EagleAccount2\ncat << 'EOF' > /home/ec2-user/Pinakin/pwd.txt\nnode\nEOF\ncat << 'EOF' > /home/ec2-user/Madhavi/pwd.txt\nnode\nEOF\ncat << 'EOF' > /home/ec2-user/EagleAccount2/pwd.txt\nacct2\nEOF\ncat << 'EOF' > /home/ec2-user/.bashrc\n\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nEOF\ncd /home/ec2-user/Pinakin\ngeth --datadir ./data account new  --password /home/ec2-user/Pinakin/pwd.txt\ncd /home/ec2-user/Madhavi\ngeth --datadir ./data account new --password /home/ec2-user/Madhavi/pwd.txt\ncd /home/ec2-user/EagleAccount2\ngeth --datadir ./data account new --password /home/ec2-user/EagleAccount2/pwd.txt\nsudo chown -R ec2-user /home/ec2-user/Pinakin\nsudo chown -R ec2-user /home/ec2-user/Madhavi\nsudo chown -R ec2-user /home/ec2-user/EagleAccount2"

            }
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "mining_nodes"
          }
        ]
      }
    },
    "EC2InstanceNodePrivate3": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": {
          "Ref": "InstanceType"
        },
        "KeyName": "ec2_group2_node1",
        "ImageId": {
          "Ref": "InstanceAMI"
        },
        "NetworkInterfaces": [
          {
            "GroupSet": [
              {
                "Ref": "WebServerSecurityGroupPublic"
              }
            ],
            "SubnetId": {"Ref": "subnetPublic"},
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0"
          }
        ],
        "UserData": {
            "Fn::Base64": {
                "Fn::Sub": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install git\ncd /home/ec2-user\ngit clone https://github.com/swamigmv/group2.git\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nsudo chown ec2-user /home/ec2-user/group2/geth/\nchmod -R 755 /home/ec2-user/group2/geth/\nmkdir -p /home/ec2-user/bnode\ncat << 'EOF' > /home/ec2-user/.bashrc\n\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\nexport PATH=$PATH:/home/ec2-user/group2/geth/\nEOF\ngeth init /home/ec2-user/genesis_node.json\ncd /home/ec2-user/bnode\n\nbootnode -genkey boot.key\nbootnode -nodekey ./boot.key  -verbosity 7 -addr 127.0.0.1:30301 > /home/ec2-user/bnode/enode_addr.ts"

            }
        },
        "Tags": [
          {
            "Key": "purpose",
            "Value": "mining_nodes"
          }
        ]
      }
    },
    "InternetGateWayRoute": {
      "Type" : "AWS::EC2::Route",
      "Properties" : {
          "RouteTableId" : { "Ref" : "RouteTable" },
          "DestinationCidrBlock" : "0.0.0.0/0",
          "GatewayId" : { "Ref" : "InternetGateway" }
       }
    },
    "subnetRouteTableAssociation" : {
       "Type" : "AWS::EC2::SubnetRouteTableAssociation",
       "Properties" : {
          "SubnetId" : { "Ref" : "subnetPublic" },
          "RouteTableId" : { "Ref" : "RouteTable" }
       }
    }
  }
}